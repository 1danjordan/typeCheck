% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package.R
\name{type_define_lambda}
\alias{type_define_lambda}
\title{Define a new type concisely}
\usage{
type_define_lambda(check_expr = TRUE, ...)
}
\arguments{
\item{check_expr}{An expression to be used as the body of the single-parameter
checking function (\code{\link{type_define}}'s parameter \code{check}). This
"lambda expression" should
\strong{use the dot (\code{.}) to refer to the parameter of the checking function}.
E.g.
\code{type_define_lambda(is.character(.) && length(.)==1)} is the same as
\code{type_define(function(.) is.character(.) && length(.)==1)}.}

\item{...}{Additional optional parameters passed to \code{\link{type_define}}.}
}
\description{
This is a convenience wrapper around \code{\link{type_define}}.
}
\examples{
type.string_scalar <- type_define_lambda(is.character(.) && length(.)==1)
type.positive_integer <- type_define_lambda(is.integer(.) && .>0)
prefix <- type_check(function(str = ? string_scalar, len = ? positive_integer) {
  substring(str, 1, len)
})
\dontrun{
 prefix(10, 1) # `str` is a `double` not a `string`
 prefix("foo", NULL) # `len` is a `NULL` not a `positive_integer`
}
}
